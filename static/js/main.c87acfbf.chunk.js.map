{"version":3,"sources":["components/Addcustomer.js","components/Addtraining.js","components/Customers.js","components/Panel.js","components/Training.js","App.js","serviceWorker.js","index.js"],"names":["Addcustomer","props","React","useState","open","setOpen","firstname","lastname","streetaddress","postcode","city","email","phone","customer","setCustomer","handleClose","handleInputChange","event","target","name","value","Button","style","margin","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","onChange","e","label","fullWidth","DialogActions","saveCustomer","Addtraining","activity","date","duration","customername","training","setTraining","saveTraining","Customers","customers","setcustomers","useEffect","fetchData","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","fetch","method","headers","body","JSON","stringify","then","res","catch","err","console","log","response","json","data","content","icons","columns","title","field","actions","icon","DeleteOutline","tooltip","rowData","link","links","href","window","confirm","DirectionsRunIcon","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","useStyles","makeStyles","root","flexGrow","maxWidth","IconLabelTabs","classes","setValue","Paper","square","className","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","component","Link","to","Training","trainings","setTrainings","updateTraining","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c87acfbf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Addcustomer(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [customer, setCustomer] = React.useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    streetaddress: \"\",\r\n    postcode: \"\",\r\n    city: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const addCustomer = () => {\r\n    props.saveCustomer(customer);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{ margin: 10 }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        Add Customer\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Customer</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"firstname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"lastname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"streetaddress\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"postcode\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"city\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"phone\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addCustomer} color=\"primary\">\r\n            SAVE\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Addtraining(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [training, setTraining] = React.useState({\r\n    activity: \"\",\r\n    date: \"\",\r\n    duration: \"\",\r\n    customername: \"\"\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setTraining({ ...training, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const addTraining = () => {\r\n    props.saveTraining(training);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{ margin: 10 }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        Add Training\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Training</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"activity\"\r\n            value={training.activity}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"activity\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"date\"\r\n            value={training.date}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"date\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"duration\"\r\n            value={training.duration}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"duration\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"customername\"\r\n            value={training.customername}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"customername\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addTraining} color=\"primary\">\r\n            SAVE\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Addcustomer from \"./Addcustomer\";\r\nimport Addtraining from \"./Addtraining\";\r\n\r\nimport { forwardRef } from \"react\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\n\r\nexport default function Customers() {\r\n  const [customers, setcustomers] = useState([]);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  const columns = [\r\n    { title: \"firstname\", field: \"firstname\" },\r\n    { title: \"lastname\", field: \"lastname\" },\r\n    { title: \"streetaddress\", field: \"streetaddress\" },\r\n    { title: \"postcode\", field: \"postcode\" },\r\n    { title: \"city\", field: \"city\" },\r\n    { title: \"email\", field: \"email\" },\r\n    { title: \"phone\", field: \"phone\" }\r\n  ];\r\n\r\n  const deleteCustomer = link => {\r\n    if (window.confirm(\"Are you sure???\")) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchData())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  const saveCustomer = customers => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(customers)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const saveTraining = customers => {\r\n    console.log(\"BBBBBBBBBBBb\");\r\n  };\r\n\r\n  const updateCustomer = (customer, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(customer)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const fetchData = () => {\r\n    fetch(\"http://customerrest.herokuapp.com/api/customers\")\r\n      .then(response => response.json())\r\n      .then(data => setcustomers(data.content))\r\n      .then(console.log(\"aaa: \", customers));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Addcustomer saveCustomer={saveCustomer} />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        data={customers}\r\n        columns={columns}\r\n        actions={[\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete User\",\r\n            // onClick: (event, rowData) => console.log(\"aaa: \", rowData.links)\r\n            onClick: (event, rowData) => deleteCustomer(rowData.links[1].href)\r\n          },\r\n          {\r\n            icon: DirectionsRunIcon,\r\n            tooltip: \"Add Training\",\r\n            onClick: (event, rowData) => saveCustomer()\r\n            // onClick: (event, rowData) => console.log(\"aaa: \", rowData.links)\r\n          }\r\n        ]}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                {\r\n                  const data = customers;\r\n                  const index = data.indexOf(oldData);\r\n                  data[index] = newData;\r\n                  updateCustomer(newData, newData.links[1].href);\r\n                }\r\n              }, 1000);\r\n            })\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 500\r\n  }\r\n});\r\n\r\nexport default function IconLabelTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        aria-label=\"icon label tabs example\"\r\n      >\r\n        <Tab\r\n          icon={<PersonPinIcon />}\r\n          component={Link}\r\n          to=\"/Customers\"\r\n          label=\"Customers\"\r\n        />\r\n        <Tab\r\n          icon={<DirectionsRunIcon />}\r\n          component={Link}\r\n          to=\"/Trainings\"\r\n          label=\"Trainings\"\r\n        />\r\n        <Tab\r\n          icon={<CalendarTodayIcon />}\r\n          component={Link}\r\n          to=\"/Calendar\"\r\n          label=\"Calendar\"\r\n        />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Addtraining from \"./Addtraining\";\r\n\r\nimport { forwardRef } from \"react\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nexport default function Training() {\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  const columns = [\r\n    { title: \"activity\", field: \"activity\" },\r\n    { title: \"date\", field: \"date\" },\r\n    { title: \"duration\", field: \"duration\" },\r\n    { title: \"customername\", field: \"customername\" }\r\n  ];\r\n\r\n  const deleteTraining = link => {\r\n    if (window.confirm(\"Are you sure???\")) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchData())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  const saveTraining = trainings => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(trainings)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const updateTraining = (trainings, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(trainings)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const fetchData = () => {\r\n    fetch(\"http://customerrest.herokuapp.com/api/trainings\")\r\n      .then(response => response.json())\r\n      .then(data => setTrainings(data.content))\r\n      .then(console.log(\"aaa: \", trainings));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Addtraining saveTraining={saveTraining} />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        data={trainings}\r\n        columns={columns}\r\n        actions={[\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete User\",\r\n            // onClick: (event, rowData) => console.log(\"aaa: \", rowData.links)\r\n            onClick: (event, rowData) => deleteTraining(rowData.links[1].href)\r\n          }\r\n        ]}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                {\r\n                  const data = trainings;\r\n                  const index = data.indexOf(oldData);\r\n                  data[index] = newData;\r\n                  updateTraining(newData, newData.links[1].href);\r\n                }\r\n              }, 1000);\r\n            })\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Customers from \"./components/Customers\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Panel from \"./components/Panel\";\nimport Training from \"./components/Training\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Panel />\n        <Switch>\n          <Route exact path=\"/Customers\" component={Customers} />\n          <Route exact path=\"/Trainings\" component={Training} />\n          <Route exact path=\"/Calendar\" component={() => <div>nnn</div>} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}